{"version":3,"sources":["components/NavItems.js","components/Nav.js","Messaging-option.js","Messaging.js","components/PubSub.js","pages/Login.js","pages/Shop.js","pages/Buy.js","pages/Home.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["NavItems","props","Fragment","Divider","List","ListItem","button","key","component","Link","to","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","Nav","container","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","AppBar","position","Toolbar","IconButton","color","aria-label","edge","onClick","Typography","variant","noWrap","title","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","children","userName","password","invocationContext","host","port","clientId","timeout","keepAliveInterval","cleanSession","useSSL","reconnect","messaging","options","Number","onMessageArrived","handleMessage","bind","callbacks","Promise","resolve","reject","onSuccess","onFailure","connect","responseObject","errorCode","console","log","callback","this","push","message","payloadString","forEach","Paho","Client","PubSub","state","connected","messages","register","Message","JSON","stringify","text","destinationName","send","disconnect","setState","connectWithPromise","then","response","subscribe","catch","error","concat","Component","Login","Shop","paragraph","Button","submit","map","index","Buy","broker","call","Home","actionOne","actionTwo","About","href","App","initPubSub","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ebb8b74.chunk.js","sourcesContent":["import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ShoppingIcon from '@material-ui/icons/ShoppingBasket';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AboutIcon from '@material-ui/icons/Info';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nfunction NavItems(props) {\n    return (\n        <React.Fragment>\n            <Divider />\n            <List>\n                {/*\n                <ListItem button key={0} component={Link} to=\"/\">\n                    <ListItemIcon>\n                        <ShoppingBasket />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Shop\"} />\n                    <Redirect to=\"/\" />\n                </ListItem>\n                */}\n\n                <ListItem button key={1} component={Link} to=\"/shop\">\n                    <ListItemIcon>\n                        <ShoppingIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Shop for Others\"} />\n                    <Redirect to=\"/\" />\n                </ListItem>\n\n                <ListItem button key={2} component={Link} to=\"/buy\">\n                    <ListItemIcon>\n                        <MoneyIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Buy for Yourself\"} />\n                </ListItem>\n\n            </List>\n            <Divider />\n            <List>\n                {/*\n                <ListItem button key={0} component={Link} to=\"/\">\n                    <ListItemIcon>\n                        <ShoppingBasket />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Shop\"} />\n                    <Redirect to=\"/\" />\n                </ListItem>\n                */}\n\n                <ListItem button key={1} component={Link} to=\"/home\">\n                    <ListItemIcon>\n                        <HomeIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Home\"} />\n                    <Redirect to=\"/\" />\n                </ListItem>\n\n                <ListItem button key={2} component={Link} to=\"/about\">\n                    <ListItemIcon>\n                        <AboutIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={\"About\"} />\n                </ListItem>\n\n            </List>\n            <Divider />\n            \n\n        </React.Fragment>\n    );\n}\n\nexport default NavItems;","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport NavItems from './NavItems';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction Nav(props) {\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n\n      <NavItems />\n \n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {props.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"application functions\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        \n            {props.children}\n      </main>\n    </div>\n  );\n}\n\nexport default Nav;\n","export default {\n\tuserName: \"solace-cloud-client\",\n\tpassword: \"2ul4nmuvr35if6218b72fh9mq1\",\n\tinvocationContext: {\n\t\thost: \"mr2hd0llj3vvdf.messaging.solace.cloud\",\n\t\tport: 8443,\n\t\tclientId: \"\"\n\t},\n\ttimeout: 3,\n\tkeepAliveInterval: 60,\n\tcleanSession: true,\n\tuseSSL: true,\n\treconnect: true\n\t\n};","import options from \"./Messaging-option\";\nimport Paho from \"paho-mqtt\";\n\nclass Messaging extends Paho.Client {\n\n\tconstructor() {\n\t\tsuper(options.invocationContext.host, Number(options.invocationContext.port), options.invocationContext.clientId);\n\t\tthis.onMessageArrived = this.handleMessage.bind(this);\n\t\tthis.callbacks = [];\n\t}\n\n\tconnectWithPromise() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\toptions.onSuccess = resolve;\n\t\t\toptions.onFailure = reject;\n\t\t\tthis.connect(options);\n\t\t});\n\t}\n\n\t// called when the client loses its connection\n\tonConnectionLost(responseObject) {\n\t\tif (responseObject.errorCode !== 0) {\n\t\t\tconsole.log(\"Connection lost with Solace Cloud\");\n\t\t}\n\t\t// Add auto connect logic with backoff here if you want to automatically reconnect\n\t}\n\n\tregister(callback) {\n\t\tthis.callbacks.push(callback);\n\t}\n\t\n\t// called when a message arrives\n\thandleMessage(message) {\n\t\tconsole.log(\"Received message\", message.payloadString);\n\t\tthis.callbacks.forEach(callback => callback(message));\n\t}\n}\n\nconst messaging = new Messaging();\nexport default messaging;","import messaging from \"../Messaging\";\nimport React from 'react';\nimport Paho from \"paho-mqtt\";\n\nclass PubSub extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            connected : false,\n            messages: []\n        };\n       messaging.register(PubSub.handleMessage.bind(this));\n    }\n\n    static initPubSub(){\n        console.log(\"Run at the start to init pub-sub stuff.\");\n    }\n\n    static submit(){\n        let message = new Paho.Message(JSON.stringify({text: \"Hello\"}));\n\t\tmessage.destinationName = \"exampletopic\";\n        messaging.send(message);    \n    }\n    \n    static connect(){\n        if (this.state.connected) {\n\t\t\tmessaging.disconnect();\n\t\t\tthis.setState({\n\t\t\t\tconnected: false,\n\t\t\t\tmessages: this.state.messages\n\t\t\t});\n\t\t} else {\n\t\t\tmessaging.connectWithPromise().then(response => {\n\t\t\t\tconsole.log(\"Succesfully connected to Solace Cloud.\", response);\n\t\t\t\tmessaging.subscribe(\"exampletopic\");\n\t\t\t\tthis.setState({\n\t\t\t\t\tconnected: true,\n\t\t\t\t\tmessages: this.state.messages\n\t\t\t\t});\n\t\t\t}).catch(error => {\n\t\t\t\tconsole.log(\"Unable to establish connection with Solace Cloud, see above logs for more details.\", error);\n\t\t\t});\n        } \n    }\n\n    static handleMessage(message){\n        this.setState(state => {\n\t\t\tconst messages = state.messages.concat(message.payloadString);\n\t\t\treturn {\n\t\t\t\tmessages,\n\t\t\t\tconnected: state.connected,\n\t\t\t};\n\t\t  });\n    }\n}\nexport default PubSub;","import React from 'react';\n\nfunction Login(props) {\n    return (\n        <React.Fragment>\n\n        <div><h1>Login</h1></div>\n\n        </React.Fragment>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport PubSub from '../components/PubSub';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nclass Shop extends React.Component {\n    \n  render(){\n  return (\n        <React.Fragment>\n\n        <div><h1>Shop for Others</h1></div>\n\n        <Typography paragraph>\n          Welcome to version one of the application.\n        </Typography>\n\n        <Button \n        \n        onClick={PubSub.connect} color=\"primary\">\n          Ready\n        </Button>\n\n        <Button onClick={PubSub.submit} color=\"primary\">\n          Submit\n        </Button>\n\n        <h1>\n\t\t\t\t\t{PubSub.state.messages.map((message, index) => {\n\t\t\t\t\t\treturn <li key={index}>{message}</li>\n\t\t\t\t\t})}</h1>\n\n        </React.Fragment>\n    );\n  }\n}\n\nexport default Shop;","import React from 'react';\nimport PubSub from '../components/PubSub';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Buy extends React.Component {\n  constructor(props){\n    super(props);\n    this.broker = new PubSub();\n  }\n  render() {\n  return (\n        <React.Fragment>\n\n        <div><h1>Buy for Yourself</h1></div>\n\n        <Typography paragraph>\n          Welcome to version one of the application.\n        </Typography>\n\n        <Button onClick={PubSub.connect.call(this.broker)} color=\"primary\">\n          Shopping\n        </Button>\n\n        <Button onClick={PubSub.submit} color=\"primary\">\n          Submit\n        </Button>\n\n        </React.Fragment>\n    );\n  }\n}\n\nexport default Buy;","import React from 'react';\nimport PubSub from '../components/PubSub';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Home(props) {\n    return (\n        <React.Fragment>\n\n        <div><h1>Welcome to Shop n' Buy</h1></div>\n\n        <Typography paragraph>\n          Welcome to version one of the application.\n        </Typography>\n\n        <Button onClick={PubSub.actionOne} color=\"primary\">\n          PubSub Action One\n        </Button>\n\n        <Button onClick={PubSub.actionTwo} color=\"primary\">\n          PubSub Action Two\n        </Button>\n\n        </React.Fragment>\n    );\n}\n\nexport default Home;","import React from 'react';\n\nfunction About(props) {\n    return (\n        <React.Fragment>\n\n            <h1>About</h1>\n\n\n            <p>Shop N' Buy is an experimental gig-economy shopping app designed during the uOttahack 2020 hackathon in Ottawa, Ontario. Source code for the application can be found <a href=\"https://github.com/RyanFleck/Radio-Shopper\">here</a>.</p>\n\n\n            <h4>Team Members</h4>\n\n            <ol>\n                <li>Omar Hayat <a href=\"https://github.com/ohayat1\">@ohayat1</a></li>\n                <li>Menxuan Chen <a href=\"https://github.com/MengxuanChen\">@MengxuanChen</a></li>\n                <li>Hemet Shah <a href=\"https://github.com/hemit-s\">@hemit-s</a></li>\n                <li>Ryan Fleck <a href=\"https://github.com/RyanFleck\">@RyanFleck</a></li>\n            </ol>\n\n        </React.Fragment>\n    );\n}\n\nexport default About;","import React from 'react';\nimport './App.css';\n\nimport ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n/* Material UI Components */\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\n/* From components folder */\nimport Nav from './components/Nav';\nimport PubSub from './components/PubSub';\n\n/* From pages folder */\nimport Login from './pages/Login';\nimport Shop from './pages/Shop';\nimport Buy from './pages/Buy';\nimport Home from './pages/Home';\nimport About from './pages/About';\n\nconst app_name = \"Shop N' Buy\"\n\nfunction App() {\n\n  PubSub.initPubSub()\n\n  return (\n    <Router>\n      <CssBaseline />\n      <Nav title={app_name} >\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Login />\n          </Route>\n\n          <Route exact path=\"/shop\">\n            <Shop />\n          </Route>\n\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n\n          <Route path=\"/buy\">\n            <Buy />\n          </Route>\n\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n        </Switch>\n\n      </Nav>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'typeface-roboto';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}